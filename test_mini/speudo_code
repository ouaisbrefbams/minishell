

is_space

t_lex        *lexer(char *input)
{
	char **out;
	int j;
	int i;

	i = 0;
	j = 0;
	if (!input)
		return (0);
	i = lexer_count_nb_element(input);
	if (!(out = malloc(sizeof(char *) * i + 1)))
        return (0);
	out[i + 1] = NULL;
	out = lexer_malloc_len_elem(input,i, out);
	return(out);

}


t_ftlst        			*lexer(char *input)
{
	int 				i;
	int					j;
	char				*temp;
	enum e_token_tag 	token;

	i = -1;
	j = 0;
	if (!input)
		return (0);
	while(input[++i])
	{
		if(lexer_sep(input[i]))
		{
			printf("%d\n", i - j);
			token = ret_token_sep(input, i);
			temp = malloc(sizeof(char) * i - j + 1);
			ft_strlcpy(temp, &input[j], i - j);
			j = i;
			printf("%s\n", &input[i]);
		}

	}
	printf("%s\n", temp);
	free(temp);
	return (0);
}
